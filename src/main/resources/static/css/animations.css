/* Advanced Animations for HashLife Analytics */

/* Floating animation */
@keyframes float {
    0% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-10px);
    }
    100% {
        transform: translateY(0px);
    }
}

.float {
    animation: float 3s ease-in-out infinite;
}

/* Continuous rotation animation */
@keyframes rotate {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

.rotate {
    animation: rotate 20s linear infinite;
}

.rotate-slow {
    animation: rotate 40s linear infinite;
}

/* Glowing effect */
@keyframes glow {
    0% {
        box-shadow: 0 0 5px rgba(67, 97, 238, 0.5);
    }
    50% {
        box-shadow: 0 0 20px rgba(67, 97, 238, 0.8);
    }
    100% {
        box-shadow: 0 0 5px rgba(67, 97, 238, 0.5);
    }
}

.glow {
    animation: glow 2s ease-in-out infinite;
}

/* Text gradients */
.text-gradient {
    background-image: linear-gradient(135deg, var(--gradient-start), var(--gradient-end));
    background-size: 100%;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
}

/* Text reveal animation */
@keyframes revealText {
    0% {
        clip-path: inset(0 100% 0 0);
    }
    100% {
        clip-path: inset(0 0 0 0);
    }
}

.reveal-text {
    animation: revealText 1s cubic-bezier(0.77, 0, 0.175, 1) forwards;
}

/* Particles background */
.particles-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    overflow: hidden;
}

.particle {
    position: absolute;
    border-radius: 50%;
    opacity: 0.3;
    pointer-events: none;
}

/* Wave animation */
@keyframes wave {
    0% {
        transform: translateX(0) translateZ(0) scaleY(1);
    }
    50% {
        transform: translateX(-25%) translateZ(0) scaleY(0.55);
    }
    100% {
        transform: translateX(-50%) translateZ(0) scaleY(1);
    }
}

.wave {
    width: 200%;
    height: 100%;
    animation: wave 12s linear infinite;
    transform-origin: center bottom;
    background-image: url('data:image/svg+xml;utf8,<svg viewBox="0 0 1440 320" xmlns="http://www.w3.org/2000/svg"><path fill="rgba(255,255,255,0.1)" d="M0,224L48,213.3C96,203,192,181,288,181.3C384,181,480,203,576,197.3C672,192,768,160,864,165.3C960,171,1056,213,1152,218.7C1248,224,1344,192,1392,176L1440,160L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"></path></svg>');
    background-repeat: repeat-x;
}

/* Shimmer effect */
@keyframes shimmer {
    0% {
        background-position: -1000px 0;
    }
    100% {
        background-position: 1000px 0;
    }
}

.shimmer {
    animation: shimmer 2s infinite linear;
    background: linear-gradient(to right, rgba(255,255,255,0) 0%, rgba(255,255,255,0.5) 50%, rgba(255,255,255,0) 100%);
    background-size: 1000px 100%;
}

/* Mouse trail effect */
.cursor-trail {
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: var(--gradient-start);
    opacity: 0.5;
    pointer-events: none;
    z-index: 9999;
    transform: translate(-50%, -50%);
    transition: width 0.3s, height 0.3s, opacity 0.3s;
}

/* Confetti animation for celebrations */
@keyframes confetti-fall {
    0% {
        transform: translateY(-100vh) rotate(0deg);
    }
    100% {
        transform: translateY(100vh) rotate(360deg);
    }
}

.confetti {
    position: fixed;
    width: 10px;
    height: 10px;
    opacity: 0.7;
    pointer-events: none;
    z-index: 9998;
    animation: confetti-fall linear forwards;
}

/* Ripple effect */
@keyframes ripple {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    100% {
        transform: scale(4);
        opacity: 0;
    }
}

.ripple {
    position: absolute;
    border-radius: 50%;
    background-color: rgba(255,255,255,0.4);
    transform: scale(0);
    animation: ripple 1s linear;
}

/* 3D Card Flip */
.card-3d {
    perspective: 1000px;
}

.card-3d-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.8s;
    transform-style: preserve-3d;
}

.card-3d:hover .card-3d-inner {
    transform: rotateY(180deg);
}

.card-3d-front, .card-3d-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
}

.card-3d-back {
    transform: rotateY(180deg);
}

/* Hover effects */
.hover-lift {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.hover-lift:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
}

.hover-glow {
    transition: box-shadow 0.3s ease;
}

.hover-glow:hover {
    box-shadow: 0 0 20px rgba(67, 97, 238, 0.5);
}

/* Button shine effect */
.btn-shine {
    position: relative;
    overflow: hidden;
}

.btn-shine::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        to right,
        rgba(255, 255, 255, 0) 0%,
        rgba(255, 255, 255, 0.3) 50%,
        rgba(255, 255, 255, 0) 100%
    );
    transform: rotate(30deg);
    transition: transform 0.5s;
}

.btn-shine:hover::after {
    transform: rotate(30deg) translate(100%, -100%);
    transition: transform 0.7s;
}

/* Image parallax effect */
.parallax-bg {
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    transition: background-position 0.5s ease;
}

/* Typewriter effect */
@keyframes typewriter {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

@keyframes blink {
    from {
        border-right-color: black;
    }
    to {
        border-right-color: transparent;
    }
}

.typewriter {
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid black;
    width: 0;
    animation:
        typewriter 2s steps(40) 1s forwards,
        blink 0.5s step-end infinite alternate;
}

/* Morph shape animation */
@keyframes morph {
    0% {
        border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    }
    50% {
        border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
    }
    100% {
        border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    }
}

.morph {
    animation: morph 8s ease-in-out infinite;
}

/* Background gradient animation */
@keyframes gradient {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

.animated-gradient {
    background: linear-gradient(-45deg, var(--gradient-start), var(--gradient-end), #614385, #516395);
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;
}

/* Stagger children animations */
.stagger-children > * {
    opacity: 0;
    transform: translateY(20px);
}

.stagger-children.animate > *:nth-child(1) {
    animation: fadeInUp 0.5s 0.1s forwards;
}

.stagger-children.animate > *:nth-child(2) {
    animation: fadeInUp 0.5s 0.2s forwards;
}

.stagger-children.animate > *:nth-child(3) {
    animation: fadeInUp 0.5s 0.3s forwards;
}

.stagger-children.animate > *:nth-child(4) {
    animation: fadeInUp 0.5s 0.4s forwards;
}

.stagger-children.animate > *:nth-child(5) {
    animation: fadeInUp 0.5s 0.5s forwards;
}

@keyframes fadeInUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Expanding circle background animation */
@keyframes expand-circle {
    0% {
        transform: scale(0);
        opacity: 1;
    }
    100% {
        transform: scale(20);
        opacity: 0;
    }
}

.expanding-circle {
    position: absolute;
    border-radius: 50%;
    background-color: rgba(67, 97, 238, 0.1);
    width: 10px;
    height: 10px;
    transform: scale(0);
    animation: expand-circle 10s infinite ease-out;
}
